http://ec2-54-175-115-211.compute-1.amazonaws.com:8080
Jenkins on AWS 
====================================================================================================================
Jenkins is an open-source automation server that integrates with a number of AWS Services, including: AWS CodeCommit, AWS CodeDeploy, Amazon EC2 Spot, and Amazon EC2 Fleet. You can use Amazon Elastic Compute Cloud (Amazon EC2) to deploy a Jenkins application on AWS.

This tutorial walks you through the process of deploying a Jenkins application. You will launch an EC2 instance, install Jenkins on that instance, and configure Jenkins to automatically spin up Jenkins agents if build abilities need to be augmented on the instance.
---------------------------------------------------------------------------------------------------------------------
Prerequisites:
---------------------------------------------------------------------------------------------------------------------
1.An AWS account. If you don’t have one, you can register here.

2.An Amazon EC2 key pair. If you don’t have one, refer to Creating a key pair.

3.An AWS IAM User with programmatic key access and permissions to launch EC2 instances.
==============================================================================
Creating a key pair
================================================================================
Creating a key pair helps ensure that the correct form of authentication is used when you install Jenkins.

To create your key pair:

1.Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ and sign in.

2.In the navigation pane, under NETWORK & SECURITY, select Key Pairs.

3.Select Create key pair.

4.For Name, enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It cannot include leading or trailing spaces.

5.For File format, select the format in which to save the private key.

 !.For OpenSSH compatibility, select pem.

 !.For PuTTY compatibility, select ppk.

6 .Select Create key pair.

The private key file downloads automatically. The base file name is the name you specified as the name of your key pair, and the file name extension is determined by the file format you chose. Save the private key file in a safe place.

This is the only chance for you to save the private key file.
If you use an SSH client on a macOS or Linux computer to connect to your Linux instance, run the following command to set the permissions of your private key file so that only you can read it.

$ chmod 400 <key_pair_name>.pem
=============================================================================
Creating a security group
=============================================================================
A security group acts as a firewall that controls the traffic allowed to reach one or more EC2 instances. When you launch an instance, you can assign it one or more security groups. You add rules that control the traffic allowed to reach the instances in each security group. You can modify a security group’s rules any time, and the new rules take effect immediately.

Steps :

1.Sign in to the AWS Management Console.

2.Open the Amazon EC2 console by selecting EC2 under Compute.
3 .In the left-hand navigation bar, select Security Groups, and then select Create Security Group.
4.In Security group name, enter WebServerSG or any preferred name of your choice, and provide a description.

5.Select your VPC from the list. You can use the default VPC.

6.On the Inbound tab, add the rules as follows:

A. Select Add Rule, and then select SSH from the Type list.

B. Under Source, select Custom, and in the text box, enter the IP address from step 1, followed by /32 indicating a single    IP Address. For example, 104.34.241.123/32 is a single IP address, while 198.51.100.2/24 results in a range of 256 IP    addresses.

c.Select Add Rule, and then select HTTP from the Type list.

7 .Select Add Rule, and then select Custom TCP Rule from the Type list.

8.Under Port Range, enter 8080.

9.Select Create.
======================================================================================================
Downloading and installing Jenkins
=======================================================================================================
:> Ensure that your software packages are up to date on your instance by using the following command to perform a quick software update:

[ec2-user ~]$ sudo yum update –y

:>Add the Jenkins repo using the following command:

[ec2-user ~]$ sudo wget -O /etc/yum.repos.d/jenkins.repo \
    https://pkg.jenkins.io/redhat-stable/jenkins.repo

:>Import a key file from Jenkins-CI to enable installation from the package:

[ec2-user ~]$ sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key

[ec2-user ~]$ sudo yum upgrade

:>Install Java (Amazon Linux 2):

[ec2-user ~]$ sudo amazon-linux-extras install java-openjdk11 -y

:>Install Java (Amazon Linux 2023):

[ec2-user ~]$ sudo dnf install java-11-amazon-corretto -y

:>Install Jenkins:


[ec2-user ~]$ sudo yum install jenkins -y

:>Enable the Jenkins service to start at boot:

[ec2-user ~]$ sudo systemctl enable jenkins

:>Start Jenkins as a service:

[ec2-user ~]$ sudo systemctl start jenkins

:>You can check the status of the Jenkins service using the command:

[ec2-user ~]$ sudo systemctl status jenkins
======================================================================================================

Configuring Jenkins
======================================================================================================
1. Connect to http://<your_server_public_DNS>:8080 from your browser. You will be able to access Jenkins through its management interface:

2.As prompted, enter the password found in /var/lib/jenkins/secrets/initialAdminPassword.

   a.Use the following command to display this password:


[ec2-user ~]$ sudo cat /var/lib/jenkins/secrets/initialAdminPassword


3.The Jenkins installation script directs you to the Customize Jenkins page. Click Install suggested plugins.

4.Once the installation is complete, the Create First Admin User will open. Enter your information, and then select Save and Continue.

